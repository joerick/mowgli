#!/bin/sh

usage () {
	echo "usage: $(basename $0) -o output-toy-path -v version input-path [input-path...]"
	echo "\tPaths are put directly into the contents file, so directories specified"
	echo "\tshould be used by this toy only."
	echo ""
	echo "\texample: $(basename $0) -o client-images.toy -v 1.0 \"Library/Application Support/Square/Images/Screensaver\""
	exit 1
}

absolutepath () {
	python -c "import os.path; print os.path.realpath('$1');"
}

removeleadingcharacter () {
	local input="$1"
	echo "${input:1}"
}

if [[ $# = 0 ]]; then usage; fi

while getopts :o:v: OPTIONS ; do
	case $OPTIONS in
		o)
			output_path="$OPTARG"
			;;
		v)
			version="$OPTARG"
			;;
		*)
			usage
	esac
done

# remove parsed arguments from the list
shift $((OPTIND-1))

if [[ ! -n "$output_path" ]] ; then
	usage
fi

if [[ ! -n "$version" ]] ; then
	usage
fi

if [[ $# == 0 ]]; then usage; fi

input_paths=()

for relative_input_path in "$@"; do
	input_path="$(absolutepath "$relative_input_path")"
	input_paths+=( "$input_path" )
done

mkdir -p "$output_path"
cd "$output_path"

mkdir -p "$version"
ln -snf "$version" latest

cd "$version"

rm contents || true

# copy the files and create contents
for input_path in "${input_paths[@]}"; do
	echo "Copying $input_path"
	pax -rw -pe "$input_path" .
	removeleadingcharacter "$input_path" >> contents
done

# make the .toybox directory
(
	mkdir -p .toybox
	
	cp "/usr/local/share/mowgli/toybox" .toybox/toybox
	cp "/usr/local/share/mowgli/toybox.conf" .toybox/toybox.conf
)
