#!/bin/sh

support_dir=${MOWGLI_SUPPORT_DIR:-"/usr/local/share/mowgli"}

usage () {
	echo "" 1>&2
	echo "Usage: $(basename $0) --version <version> --release <release> <contents> <output>" 1>&2
	echo "" 1>&2
	echo "\tBuilds a toy with the specified version/release using a build root at" 1>&2
	echo "\tcontents." 1>&2
	exit 1
}

# parse the arguments

parse_arguments () {
	while [ -n "$1" ]; do
		case $1 in
			"--version")
				shift
				version=$1
				;;
			"--release")
				shift
				release=$1
				;;
			*)
				break
		esac
		shift
	done
	
	if [ -z $version ] ; then
		echo "Please specify a version using the --version argument" 1>&2
		usage
	fi
	
	if [ -z $release ] ; then
		echo "Please specify a release identifier using the --release argument" 1>&2
		usage
	fi
	
	contents=$1
	shift
	output=$1
	
	if [ -z "$contents" ] ; then
		echo "Please specify the contents directory" 1>&2
		usage
	fi
	
	if [ -z "$output" ] ; then
		echo "Please specify the output path" 1>&2
		usage
	fi
}

toc_for_contents () {
	(
		cd $1
		find . -not -type d -or -empty
	)
}

build_toy () {
	version=$1
	release=$2
	contents=$3
	output=$4
	
	set -e
	
	mkdir -p "$output/versions/$version/releases/$release/contents"
	
	rsync -a "$contents/" "$output/versions/$version/releases/$release/contents/"
	
	cp -R "$support_dir/package.toybox/" "$output/.toybox/"
	cp -R "$support_dir/version.toybox/" "$output/versions/$version/.toybox/"
	cp -R "$support_dir/release.toybox/" "$output/versions/$version/releases/$release/.toybox/"
		
	toc=$(toc_for_contents "$output/versions/$version/releases/$release/contents/")
	echo "$toc" > "$output/versions/$version/releases/$release/.toybox/TOC"
	
	set +e
}

parse_arguments $@

build_toy "$version" "$release" "$contents" "$output"
